//class template version 5.0 //07.07.2023//

// Class Work 1.09.2023 -------------------------------------------	


//0 Диграмма объектов - изучить самостоятельно

/*
Диаграмма объектов (англ. Object Diagram) в языке моделирования UML предназначена для демонстрации совокупности моделируемых объектов и связей между ними в фиксированный момент времени[1][2].

Диаграмма объектов описывает конкретные экземпляры объектов и напрямую соотносится с диаграммой классов, 
которая даёт общее представление о конфигурации системы. 

Она используется для документирования структур данных и создания статических снимков состояний объектов 
принимая во внимание реальные экземпляры или прототипы. 

Динамику поведения объектов обычно изображают в виде последовательности таких диаграмм.
*/


//////////////////////////////////////////////////
//1 Диаграмма развертывания / Deployment diagram

/*
описывает физические узлы системы, а также связи, как среды передачи между ними

Состоит из:
	1) узлов-устройств
	2) комментарии к узлам


Существует два типа узлов:
	- Узел устройства
	- Узел среды выполнения

Узлы устройств — это физические вычислительные ресурсы со своей памятью и сервисами 
	для выполнения программного обеспечения, такие как обычные ПК, мобильные телефоны.

Узел среды выполнения — это программный вычислительный ресурс, который работает внутри 
внешнего узла и который представляет собой сервис, выполняющий другие исполняемые программные элементы.

*/

///////////////////////////////////////////////////
//2 Диаграмма коммуникации / Сommunication diagram

/*
Описывает взаимодействие между объектами
*/

///////////////////////////////////////////////////
//3 Диаграмма компонентов / Component diagram

/*
 Статическая структурная диаграмма, которая показывает разбиение программной системы 
 на структурные компоненты и связи (зависимости) между компонентами. 
 В качестве физических компонентов могут выступать файлы, библиотеки, модули, исполняемые файлы, пакеты и т. п.
 
 Решаемые задачи:
 1* Описывает систему только на одном уровне абстракции
 2* Создается для одного объекта системы
 3* Описывает спсобоы взаимодействия компонентов между собой 



*/




// MAIN ------- MAIN ------- MAIN ------- MAIN ------- MAIN --------
int main()
{

//std::cout << "\n\n";
//system("pause");	

}


